# makefile.top
#
# This is part of the flight simulator 'fly8'.
# Author: Eyal Lebedinsky (eyal@eyal.emu.id.au).

# top level makefile for msdos, djgpp v1 with standard 'make'
#

CC=      	gcc

SYSTEM= 	DJGPP

# basic options.
#
OFLAGSB=	-DSYS_$(SYSTEM)=1 -m486 -Wall -fomit-frame-pointer

# If you have assembly support, define:
#	-DUSE_ASM
# If you want to use C support with debuging enabled, define:
#	-DDEBUG_MULDIV
# for internal consistency checking debuging enabled, define:
#	-DCHECK_GR
# for internal memory manager verification, define:
#	-DCHECK_MEM
# To assist debugging, make all functions external:
#	-DLOCAL_FUNC=extern
# To enable memory trace add:
#	-DDEBUG_MEM
# If you still have problems then you still have these available:
#	-DNEED_STRICMP=1 -DNEED_STRNICMP=1 -DNEED_LABS=1
#
OFLAGSD=	$(OFLAGSB)

# no optimization at all.
#
OFLAGSN=	$(OFLAGSD) -O0

# size optimization.
#
OFLAGSS=	$(OFLAGSD) -O2

# speed optimization.
#
OFLAGST=	$(OFLAGSD) -O2

# options for inlining. Add this to time-critical modules.
OFLAGSO=	$(OFLAGST) -DINLINE -funroll-loops

OFLAGS=		$(OFLAGST)

SHFLAGS=

CFLAGSX=	$(OFLAGSO) $(SHFLAGS)		# used on subdirectories
CFLAGSN=	$(OFLAGSN) $(SHFLAGS)		# not optimized at all
CFLAGS=		$(OFLAGS)  $(SHFLAGS)		# standard (speed) optimized
CFLAGSS=	$(OFLAGSS) $(SHFLAGS)		# space optimized
CFLAGSO=	$(OFLAGSO) $(SHFLAGS)		# highly optimized

OO=		.o
OOUT=		-o ./
EOUT=		-o ./

FLIB=		fly8.a
ROOTDIR=	d:\games\fly8
TOPDIR=		$(ROOTDIR)\src
FLY8DIR=	fly8
THISDIR=	$(TOPDIR)\$(FLY8DIR)		# This is where we run 'make'
INSTPATH=	$(ROOTDIR)
INSTDIR=	d1
INSTFLY8=	$(INSTPATH)\$(INSTDIR)
RELDIR=		$(INSTPATH)
VERNAME=	f8112
BINNAME=	$(VERNAME)$(INSTDIR)

PMAKE=		make

#	objects
#
OOBJS=	obasic$(OO) object$(OO) obox$(OO) obroken$(OO) ochute$(OO) \
	oclassic$(OO) ocrater$(OO) ofplane$(OO) oground$(OO) ogtarget$(OO) \
	ohouse$(OO) olow$(OO) om61$(OO) omk82$(OO) opaddoc$(OO) oplane$(OO) \
	orunway$(OO) osmoke$(OO) otarget$(OO) otower$(OO) oviewer$(OO) \
	oxplane$(OO) oyplane$(OO) ogen$(OO) ocar$(OO)

#	Portable programs
#

COBJS=	airdata$(OO) alarms$(OO) altitude$(OO) autop$(OO) body$(OO) \
	btrail$(OO) cockpit$(OO) colors$(OO) command$(OO) compass$(OO) \
	debug$(OO) grmgr$(OO) editstr$(OO) engine$(OO) field$(OO) fly8$(OO) \
	fly8str$(OO) gear$(OO) heading$(OO) hud$(OO) hudmenu$(OO) ifuncs$(OO) \
	info$(OO) init$(OO) kbdmgr$(OO) keypad$(OO) lamps$(OO) land$(OO) \
	log$(OO) loop$(OO) macros$(OO) mat$(OO) max$(OO) memory$(OO) menu$(OO) \
	menus$(OO) message$(OO) nav$(OO) need$(OO) netmgr$(OO) nogr$(OO) \
	nokbd$(OO) nosound$(OO) nosystem$(OO) notimer$(OO) objects$(OO) \
	panel$(OO) pid$(OO) piper$(OO) pitch$(OO) player$(OO) ptrmgr$(OO) \
	prm$(OO) radar$(OO) random$(OO) remote$(OO) show$(OO) sixdof$(OO) \
	sky$(OO) sndmgr$(OO) speed$(OO) stack$(OO) stfont1$(OO) stfont2$(OO) \
	stores$(OO) stroke$(OO) symbols$(OO) system$(OO) term$(OO) tunes$(OO) \
	util$(OO) views$(OO) vmodes$(OO) vv$(OO) waypoint$(OO) window$(OO) \
	buffers$(OO) lnd$(OO) \
	$(OOBJS)

OBJS=	$(COBJS)

HFILES=	fly.h colors.h config.h
HPLANE=	$(HFILES) plane.h hud.h
LIBS=	-lgr -lpc -lm

.PRECIOUS: itabs.c

all:	fly util dat

fly:	need$(OO) sys fly8.exe

dat:	parm shape

sys:
	cd $(SYSTEM)
	$(PMAKE) XFLAGS='$(CFLAGSX)' SYSTEM=$(SYSTEM) CC=$(CC) all
	cd ..

parm:
	cd parms
	$(PMAKE) SHFLAGS='$(SHFLAGS)' SYSTEM=$(SYSTEM) CC=$(CC) all
	cd ..

shape:
	cd shapes
	$(PMAKE) SHFLAGS='$(SHFLAGS)' SYSTEM=$(SYSTEM) CC=$(CC) all
	cd ..

util:
	cd utils
	$(PMAKE) XFLAGS='$(CFLAGSX)' SYSTEM=$(SYSTEM) CC=$(CC) all
	cd ..

$(FLIB): $(OBJS) version
	-del $(FLIB)
	ar q $(FLIB) airdata.o alarms.o altitude.o autop.o body.o btrail.o
	ar q $(FLIB) cockpit.o colors.o command.o compass.o debug.o grmgr.o
	ar q $(FLIB) editstr.o engine.o field.o fly8str.o gear.o heading.o
	ar q $(FLIB) hud.o hudmenu.o ifuncs.o info.o init.o kbdmgr.o keypad.o
	ar q $(FLIB) lamps.o land.o log.o loop.o macros.o mat.o max.o memory.o
	ar q $(FLIB) menu.o menus.o message.o nav.o need.o netmgr.o nogr.o
	ar q $(FLIB) nokbd.o nosound.o nosystem.o notimer.o obasic.o object.o
	ar q $(FLIB) objects.o obox.o obroken.o ochute.o oclassic.o ocrater.o
	ar q $(FLIB) ofplane.o oground.o ogtarget.o ohouse.o olow.o om61.o
	ar q $(FLIB) omk82.o opaddoc.o oplane.o orunway.o osmoke.o otarget.o
	ar q $(FLIB) otower.o oviewer.o oxplane.o oyplane.o panel.o pid.o
	ar q $(FLIB) piper.o pitch.o player.o ptrmgr.o prm.o radar.o random.o
	ar q $(FLIB) remote.o show.o sixdof.o sky.o sndmgr.o speed.o stack.o
	ar q $(FLIB) stfont1.o stfont2.o stores.o stroke.o symbols.o system.o
	ar q $(FLIB) term.o tunes.o util.o version.o views.o vmodes.o vv.o
	ar q $(FLIB) waypoint.o window.o buffers.o ogen.o lnd.o ocar.o
	ranlib $(FLIB)

fly8.exe:	fly8.o $(FLIB) $(SYSTEM)/fly8sys.a
	$(CC) $(EOUT)fly8 fly8.o $(FLIB) $(SYSTEM)/fly8sys.a $(FLIB) $(LIBS)
	nm fly8 >fly8.map
	strip fly8
	coff2exe fly8
	del fly8

clean:
	-del errs
	-del itabs.c
	-del *.o
	-del *.a
	-del ifuncsm
	-del fly8
	-del *.map
	-del *.exe
	-del *.tgz
	cd $(SYSTEM)
	$(PMAKE) clean
	cd ..
	cd shapes
	$(PMAKE) clean
	cd ..
	cd parms
	$(PMAKE) clean
	cd ..
	cd utils
	$(PMAKE) clean
	cd ..

install:
	md $(INSTFLY8)
	copy fly8.exe			$(INSTFLY8)
	copy fly8.map			$(INSTFLY8)
	copy misc\*.max			$(INSTFLY8)
	copy misc\*.adv			$(INSTFLY8)
	copy misc\*.b50			$(INSTFLY8)
	copy misc\*.f22			$(INSTFLY8)
	copy utils\*.exe		$(INSTFLY8)
	copy $(SYSTEM)\fly.ini		$(INSTFLY8)
#	copy $(SYSTEM)\fly*.bat		$(INSTFLY8)
	copy $(SYSTEM)\*.vmd		$(INSTFLY8)
	copy misc\grvesa*.vmd		$(INSTFLY8)
	-copy $(SYSTEM)\*.exe		$(INSTFLY8)
#	copy $(SYSTEM)\find.*		$(INSTFLY8)
	copy $(SYSTEM)\readme.*		$(INSTFLY8)
#	copy $(SYSTEM)\*.zip		$(INSTFLY8)
	copy misc\default.f8b		$(INSTFLY8)
	copy shapes\*.vxx		$(INSTFLY8)
	copy shapes\wf16.vxx		$(INSTFLY8)\plane.vxx
	copy parms\*.prm		$(INSTFLY8)
	copy parms\*.nav		$(INSTFLY8)
	copy parms\*.lnd		$(INSTFLY8)
	copy docs\*.doc			$(INSTFLY8)
	copy docs\bugs.txt		$(INSTFLY8)
	md $(INSTFLY8)\data
	copy parms.h			$(INSTFLY8)\data
	copy shape.h			$(INSTFLY8)\data
	copy colors.h			$(INSTFLY8)\data
	copy parms\expr.awk		$(INSTFLY8)\data
	copy parms\*.prc		$(INSTFLY8)\data
	copy parms\*.lnc		$(INSTFLY8)\data
	copy parms\*.nac		$(INSTFLY8)\data
	copy misc\build.bat		$(INSTFLY8)\data
	copy c:\bin\awk.exe		$(INSTFLY8)\data
	copy c:\bin\cpp.exe		$(INSTFLY8)\data

reinstall:
	copy fly8.exe			$(INSTFLY8)
	copy fly8.map			$(INSTFLY8)
	-copy $(SYSTEM)\*.exe		$(INSTFLY8)
	copy utils\*.exe		$(INSTFLY8)

release:	relbin
	copy docs\release.txt $(RELDIR)\$(VERNAME).txt

relbin:
	-md $(RELDIR)
	-del $(RELDIR)\$(BINNAME).zip
	cd $(INSTFLY8)
	-del *.mac
	-del *.log
	pkzip -ex -rP $(RELDIR)\$(BINNAME) *.*
	cd $(THISDIR)


# Use this to create itabs.c, then use -DEXT_TAB for ifuncs
#
ifuncsm$(OO):	ifuncs.c $(HFILES) 
	$(CC) $(CFLAGSN) -DGEN_TAB $(OOUT)ifuncsm$(OO) -c ifuncs.c

ifuncsm.exe:	ifuncsm$(OO) debug$(OO)
	$(CC) $(CFLAGS) $(EOUT)ifuncsm ifuncsm$(OO) debug$(OO) -lm
	strip ifuncsm
	coff2exe ifuncsm
	del ifuncsm

itabs.c:	ifuncsm.exe
	ifuncsm >itabs.c

# optimization flags are carefuly selected. Only CFLAGSN is used with bug
# ridden complers to avoid failures; the other options are not platform
# dependent.

airdata$(OO):	airdata.c $(HFILES)
	$(CC) $(CFLAGS) -c $*.c

alarms$(OO):	alarms.c $(HPLANE)
	$(CC) $(CFLAGS) -c $*.c

altitude$(OO):	altitude.c $(HPLANE)
	$(CC) $(CFLAGS) -c $*.c

autop$(OO):	autop.c $(HPLANE)
	$(CC) $(CFLAGS) -c $*.c

body$(OO):	body.c $(HFILES)
	$(CC) $(CFLAGS) -c $*.c

btrail$(OO):	btrail.c $(HPLANE)
	$(CC) $(CFLAGS) -c $*.c

buffers$(OO):	buffers.c $(HFILES)
	$(CC) $(CFLAGSO) -c $*.c

cockpit$(OO):	cockpit.c $(HPLANE)
	$(CC) $(CFLAGS) -c $*.c

colors$(OO):	colors.c $(HFILES)
	$(CC) $(CFLAGSS) -c $*.c

command$(OO):	command.c $(HFILES)
	$(CC) $(CFLAGSS) -c $*.c

compass$(OO):	compass.c $(HPLANE)
	$(CC) $(CFLAGS) -c $*.c

debug$(OO):	debug.c $(HFILES) 
	$(CC) $(CFLAGSS) -c $*.c

editstr$(OO):	editstr.c $(HFILES) keydef.h keymap.h
	$(CC) $(CFLAGSS) -c $*.c

engine$(OO):	engine.c $(HPLANE)
	$(CC) $(CFLAGS) -c $*.c

field$(OO):	field.c $(HFILES)
	$(CC) $(CFLAGSS) -c $*.c

fly8$(OO):	fly8.c $(HFILES)
	$(CC) $(CFLAGSS) -c $*.c

fly8str$(OO):	fly8str.c $(HFILES)
	$(CC) $(CFLAGSS) -c $*.c

gear$(OO):	gear.c $(HPLANE)
	$(CC) $(CFLAGS) -c $*.c

grmgr$(OO):	grmgr.c $(HFILES)
	$(CC) $(CFLAGS) -c $*.c

hddmenu$(OO):	hddmenu.c $(HFILES)
	$(CC) $(CFLAGSS) -c $*.c

heading$(OO):	heading.c $(HPLANE)
	$(CC) $(CFLAGS) -c $*.c

# djgpp 1.12 hangs with -O2...
#
hud$(OO):	hud.c $(HPLANE)
	$(CC) $(CFLAGS) -O1 -c $*.c

hudmenu$(OO):	hudmenu.c $(HPLANE)
	$(CC) $(CFLAGSS) -c $*.c

ifuncs$(OO):	ifuncs.c itabs.c $(HFILES)
	$(CC) $(CFLAGSO) -DEXT_TABS -c $*.c

info$(OO):	info.c $(HPLANE)
	$(CC) $(CFLAGSS) -c $*.c

init$(OO):	init.c $(HFILES)
	$(CC) $(CFLAGSS) -c $*.c

kbdmgr$(OO):	kbdmgr.c $(HFILES)
	$(CC) $(CFLAGSS) -c $*.c

keypad$(OO):	keypad.c $(HFILES)
	$(CC) $(CFLAGSS) -c $*.c

lamps$(OO):	lamps.c $(HPLANE)
	$(CC) $(CFLAGS) -c $*.c

land$(OO):	land.c $(HFILES)
	$(CC) $(CFLAGS) -c $*.c

lnd$(OO):	lnd.c $(HFILES)
	$(CC) $(CFLAGSS) -c $*.c

log$(OO):	log.c $(HFILES)
	$(CC) $(CFLAGSS) -c $*.c

loop$(OO):	loop.c $(HPLANE)
	$(CC) $(CFLAGSS) -c $*.c

macros$(OO):	macros.c $(HFILES) keydef.h keymap.h
	$(CC) $(CFLAGSS) -c $*.c

mat$(OO):	mat.c $(HFILES)
	$(CC) $(CFLAGSO) -c $*.c

max$(OO):	max.c $(HFILES) keydef.h keymap.h keyname.h
	$(CC) $(CFLAGSS) -c $*.c

memory$(OO):	memory.c $(HFILES)
	$(CC) $(CFLAGSS) -c $*.c

menu$(OO):	menu.c $(HFILES) keydef.h keymap.h
	$(CC) $(CFLAGSS) -c $*.c

menus$(OO):	menus.c $(HFILES) keydef.h keymap.h
	$(CC) $(CFLAGSS) -c $*.c

netmgr$(OO):	netmgr.c $(HFILES)
	$(CC) $(CFLAGSS) -c $*.c

message$(OO):	message.c $(HFILES)
	$(CC) $(CFLAGSS) -c $*.c

nav$(OO):	nav.c $(HPLANE)
	$(CC) $(CFLAGS) -c $*.c

need$(OO):	need.c $(HFILES)
	$(CC) $(CFLAGS) -c $*.c

nogr$(OO):	nogr.c $(HFILES)
	$(CC) $(CFLAGS) -c $*.c

nokbd$(OO):	nokbd.c $(HFILES)
	$(CC) $(CFLAGS) -c $*.c

nosound$(OO):	nosound.c $(HFILES)
	$(CC) $(CFLAGS) -c $*.c

nosystem$(OO):	nosystem.c $(HFILES)
	$(CC) $(CFLAGS) -c $*.c

notimer$(OO):	notimer.c $(HFILES)
	$(CC) $(CFLAGS) -c $*.c

obasic$(OO):	obasic.c $(HPLANE)
	$(CC) $(CFLAGS) -c $*.c

object$(OO):	object.c $(HPLANE)
	$(CC) $(CFLAGS) -c $*.c

objects$(OO):	objects.c $(HFILES)
	$(CC) $(CFLAGS) -c $*.c

obox$(OO):	obox.c $(HFILES)
	$(CC) $(CFLAGS) -c $*.c

obroken$(OO):	obroken.c $(HFILES)
	$(CC) $(CFLAGS) -c $*.c

ocar$(OO):	ocar.c $(HFILES)
	$(CC) $(CFLAGS) -c $*.c

ochute$(OO):	ochute.c $(HFILES)
	$(CC) $(CFLAGS) -c $*.c

oclassic$(OO):	oclassic.c $(HPLANE)
	$(CC) $(CFLAGS) -c $*.c

ocrater$(OO):	ocrater.c $(HFILES)
	$(CC) $(CFLAGS) -c $*.c

ofplane$(OO):	ofplane.c $(HPLANE)
	$(CC) $(CFLAGS) -c $*.c

ogen$(OO):	ogen.c $(HFILES)
	$(CC) $(CFLAGS) -c $*.c

oground$(OO):	oground.c $(HFILES)
	$(CC) $(CFLAGS) -c $*.c

ogtarget$(OO):	ogtarget.c $(HFILES)
	$(CC) $(CFLAGS) -c $*.c

ohouse$(OO):	ohouse.c $(HFILES)
	$(CC) $(CFLAGS) -c $*.c

olow$(OO):	olow.c $(HFILES)
	$(CC) $(CFLAGS) -c $*.c

om61$(OO):	om61.c $(HPLANE)
	$(CC) $(CFLAGS) -c $*.c

omk82$(OO):	omk82.c $(HPLANE)
	$(CC) $(CFLAGS) -c $*.c

opaddoc$(OO):	opaddoc.c $(HFILES)
	$(CC) $(CFLAGS) -c $*.c

oplane$(OO):	oplane.c $(HPLANE)
	$(CC) $(CFLAGS) -c $*.c

orunway$(OO):	orunway.c $(HFILES)
	$(CC) $(CFLAGS) -c $*.c

osmoke$(OO):	osmoke.c $(HFILES)
	$(CC) $(CFLAGS) -c $*.c

otarget$(OO):	otarget.c $(HFILES)
	$(CC) $(CFLAGS) -c $*.c

otower$(OO):	otower.c $(HFILES)
	$(CC) $(CFLAGS) -c $*.c

oxplane$(OO):	oxplane.c $(HPLANE)
	$(CC) $(CFLAGS) -c $*.c

oyplane$(OO):	oyplane.c $(HPLANE)
	$(CC) $(CFLAGS) -c $*.c

oviewer$(OO):	oviewer.c $(HPLANE)
	$(CC) $(CFLAGS) -c $*.c

panel$(OO):	panel.c $(HPLANE)
	$(CC) $(CFLAGS) -c $*.c

pid$(OO):	pid.c $(HFILES)
	$(CC) $(CFLAGS) -c $*.c

piper$(OO):	piper.c $(HPLANE)
	$(CC) $(CFLAGS) -c $*.c

pitch$(OO):	pitch.c $(HPLANE)
	$(CC) $(CFLAGS) -c $*.c

player$(OO):	player.c $(HFILES)
	$(CC) $(CFLAGS) -c $*.c

prm$(OO):	prm.c $(HPLANE)
	$(CC) $(CFLAGSS) -c $*.c

ptrmgr$(OO):	ptrmgr.c $(HFILES) keydef.h keymap.h
	$(CC) $(CFLAGSS) -c $*.c

radar$(OO):	radar.c $(HPLANE)
	$(CC) $(CFLAGSS) -c $*.c

random$(OO):	random.c $(HFILES)
	$(CC) $(CFLAGS) -c $*.c

remote$(OO):	remote.c $(HFILES)
	$(CC) $(CFLAGS) -c $*.c

show$(OO):	show.c $(HFILES)
	$(CC) $(CFLAGSO) -c $*.c

sky$(OO):	sky.c $(HFILES)
	$(CC) $(CFLAGS) -c $*.c

sixdof$(OO):	sixdof.c $(HPLANE)
	$(CC) $(CFLAGS) -c $*.c

sndmgr$(OO):	sndmgr.c $(HFILES)
	$(CC) $(CFLAGS) -c $*.c

speed$(OO):	speed.c $(HPLANE)
	$(CC) $(CFLAGS) -c $*.c

stack$(OO):	stack.c $(HFILES)
	$(CC) $(CFLAGSS) -c $*.c

stfont1$(OO):	stfont1.c $(HFILES)
	$(CC) $(CFLAGSN) -c $*.c

stfont2$(OO):	stfont2.c $(HFILES)
	$(CC) $(CFLAGSN) -c $*.c

stores$(OO):	stores.c $(HPLANE)
	$(CC) $(CFLAGS) -c $*.c

stroke$(OO):	stroke.c $(HFILES)
	$(CC) $(CFLAGSO) -c $*.c

symbols$(OO):	symbols.c $(HFILES)
	$(CC) $(CFLAGSO) -c $*.c

system$(OO):	system.c $(HFILES)
	$(CC) $(CFLAGS) -c $*.c

term$(OO):	term.c $(HFILES)
	$(CC) $(CFLAGSS) -c $*.c

tunes$(OO):	tunes.c $(HFILES) notes.h keyofc.h keyofd.h
	$(CC) $(CFLAGSN) -c $*.c

util$(OO):	util.c $(HFILES)
	$(CC) $(CFLAGS) -c $*.c

version:	version.c $(HFILES)
	$(CC) $(CFLAGSS) -c version.c

views$(OO):	views.c $(HPLANE)
	$(CC) $(CFLAGS) -c $*.c

vmodes$(OO):	vmodes.c $(HFILES)
	$(CC) $(CFLAGSS) -c $*.c

vv$(OO):	vv.c $(HPLANE)
	$(CC) $(CFLAGS) -c $*.c

waypoint$(OO):	waypoint.c $(HPLANE)
	$(CC) $(CFLAGS) -c $*.c

window$(OO):	window.c $(HFILES) keydef.h keymap.h
	$(CC) $(CFLAGS) -c $*.c
